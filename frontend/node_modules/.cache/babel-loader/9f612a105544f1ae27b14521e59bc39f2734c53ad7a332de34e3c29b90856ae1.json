{"ast":null,"code":"import SessionBuilder from'./models/SessionBuilder.js';const getActiveSessions=async name=>{const response=await fetch(\"/api/session/active/\".concat(name));const data=await response.json();return data;};const getActiveTutorSessions=async name=>{const response=await fetch(\"/api/session/tutor/active/\".concat(name));const data=await response.json();return data;};const getPendingSessions=async name=>{const response=await fetch(\"/api/session/pending/\".concat(name));const data=await response.json();return data;};const getPendingTutorSessions=async name=>{const response=await fetch(\"/api/session/tutor/pending/\".concat(name));const data=await response.json();console.log(data);return data;};const getCanceledSessions=async name=>{const response=await fetch(\"/api/session/canceled/\".concat(name));const data=await response.json();return data;};const getCanceledTutorSessions=async name=>{const response=await fetch(\"/api/session/tutor/canceled/\".concat(name));const data=await response.json();return data;};const getSessionById=async id=>{const response=await fetch(\"/api/session/\".concat(id));const data=await response.json();return data;};const getSessionsByTutorId=async id=>{const response=await fetch(\"/api/session/tutor/\".concat(id));const data=await response.json();return data;};const getSessionByStudentId=async id=>{const response=await fetch(\"/api/session/student/\".concat(id));const data=await response.json();return data;};const putPendingSession=async session=>{const pendingSession=SessionBuilder.createPendingSession(session);const id=await fetch('/api/session/id').then(res=>res.json());pendingSession.id=id;const response=await fetch(\"/api/session/\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(pendingSession)});const data=await response.json();return data;};const putCancelledSession=async session=>{const cancelledSession=SessionBuilder.createDeclinedSession(session);const id=await fetch('/api/session/id').then(res=>res.json());cancelledSession.id=id;const response=await fetch(\"/api/session/\".concat(id),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(cancelledSession)});const data=await response.json();return data;};const approveSession=async session=>{console.log(\"This is what we're getting\",session);const approvedSession=SessionBuilder.createActiveSession(session);// const id = await fetch('/api/session/id',).then(res => res.json());\n// approvedSession.id = id;\nconst response=await fetch(\"/api/session/update/\".concat(session.id),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(approvedSession)});const data=await response.json();return data;};const declineSession=async session=>{const declinedSession=SessionBuilder.createDeclinedSession(session);// const id = await fetch('/api/session/id',).then(res => res.json());\n// declinedSession.id = id;\nconst response=await fetch(\"/api/session/update/\".concat(session.id),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(declinedSession)});const data=await response.json();return data;};const updateSession=async(session,params)=>{const updatedSession=SessionBuilder.updateSession(session,params);const response=await fetch(\"/api/session/update/\".concat(updatedSession.id),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedSession)});const data=await response.json();return data;};const sendChat=async(id,sender,message)=>{const response=await fetch(\"/api/session/chat/\".concat(id),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({sender,message})});const data=await response.json();return data;};const getChat=async id=>{const response=await fetch(\"/api/session/chat/\".concat(id));const data=await response.json();return data;};const endSession=async id=>{const response=await fetch(\"/api/session/\".concat(id),{method:'DELETE',headers:{'Content-Type':'application/json'}});const data=await response.json();return data;};export{getActiveSessions,getPendingSessions,getCanceledSessions,getSessionById,getSessionsByTutorId,getSessionByStudentId,putPendingSession,putCancelledSession,sendChat,getChat,endSession,getActiveTutorSessions,getPendingTutorSessions,getCanceledTutorSessions,approveSession,declineSession};","map":{"version":3,"names":["SessionBuilder","getActiveSessions","name","response","fetch","concat","data","json","getActiveTutorSessions","getPendingSessions","getPendingTutorSessions","console","log","getCanceledSessions","getCanceledTutorSessions","getSessionById","id","getSessionsByTutorId","getSessionByStudentId","putPendingSession","session","pendingSession","createPendingSession","then","res","method","headers","body","JSON","stringify","putCancelledSession","cancelledSession","createDeclinedSession","approveSession","approvedSession","createActiveSession","declineSession","declinedSession","updateSession","params","updatedSession","sendChat","sender","message","getChat","endSession"],"sources":["/workspaces/Tutor-Website/frontend/src/controllers/SessionController.js"],"sourcesContent":["import SessionBuilder from './models/SessionBuilder.js';\n\nconst getActiveSessions = async (name) => {\n    const response = await fetch(`/api/session/active/${name}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getActiveTutorSessions = async (name) => {\n    const response = await fetch(`/api/session/tutor/active/${name}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getPendingSessions = async (name) => {\n    const response = await fetch(`/api/session/pending/${name}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getPendingTutorSessions = async (name) => {\n    const response = await fetch(`/api/session/tutor/pending/${name}`);\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\n\nconst getCanceledSessions = async (name) => {\n    const response = await fetch(`/api/session/canceled/${name}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getCanceledTutorSessions = async (name) => {\n    const response = await fetch(`/api/session/tutor/canceled/${name}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getSessionById = async (id) => {\n    const response = await fetch(`/api/session/${id}`);\n    const data = await response.json();\n    return data;\n};\n\nconst getSessionsByTutorId = async (id) => {\n    const response = await fetch(`/api/session/tutor/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nconst getSessionByStudentId = async (id) => {\n    const response = await fetch(`/api/session/student/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nconst putPendingSession = async (session) => {\n    const pendingSession = SessionBuilder.createPendingSession(session);\n    const id = await fetch('/api/session/id',).then(res => res.json());\n    pendingSession.id = id;\n    const response = await fetch(`/api/session/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(pendingSession),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst putCancelledSession = async (session) => {\n    const cancelledSession = SessionBuilder.createDeclinedSession(session);\n    const id = await fetch('/api/session/id',).then(res => res.json());\n    cancelledSession.id = id;\n    const response = await fetch(`/api/session/${id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(cancelledSession),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst approveSession = async (session) => {\n    console.log(\"This is what we're getting\",session);\n    const approvedSession = SessionBuilder.createActiveSession(session);\n    // const id = await fetch('/api/session/id',).then(res => res.json());\n    // approvedSession.id = id;\n    const response = await fetch(`/api/session/update/${session.id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(approvedSession),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst declineSession = async (session) => {\n    const declinedSession = SessionBuilder.createDeclinedSession(session);\n    // const id = await fetch('/api/session/id',).then(res => res.json());\n    // declinedSession.id = id;\n    const response = await fetch(`/api/session/update/${session.id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(declinedSession),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst updateSession = async (session, params) => {\n    const updatedSession = SessionBuilder.updateSession(session, params);\n    const response = await fetch(`/api/session/update/${updatedSession.id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedSession),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst sendChat = async (id, sender, message) => {\n    const response = await fetch(`/api/session/chat/${id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sender, message }),\n    });\n    const data = await response.json();\n    return data;\n}\n\nconst getChat = async (id) => {\n    const response = await fetch(`/api/session/chat/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nconst endSession = async (id) => {\n    const response = await fetch(`/api/session/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n    const data = await response.json();\n    return data;\n}\n\nexport {\n    getActiveSessions,\n    getPendingSessions,\n    getCanceledSessions,\n    getSessionById,\n    getSessionsByTutorId,\n    getSessionByStudentId,\n    putPendingSession,\n    putCancelledSession,\n    sendChat,\n    getChat,\n    endSession,\n    getActiveTutorSessions,\n    getPendingTutorSessions,\n    getCanceledTutorSessions,\n    approveSession,\n    declineSession,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}