{"ast":null,"code":"import React from\"react\";import TutorCard from\"../../components/TutorCard\";import{useNavigate}from\"react-router-dom\";import{getTutors}from\"../../controllers/AccountController\";import{tutorListBasedOnQuery}from\"../../controllers/AccountController\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function StudentExplorePage(props){const[tutors,setTutors]=React.useState([]);const[queriedTutors,setQueriedTutors]=React.useState([]);const[searchedQuery,setSearchedQuery]=React.useState([]);const navigate=useNavigate();const user=props.user;React.useEffect(()=>{async function fetchData(){const tutors=await getTutors();//   const sortedTutors = tutors.sort(\n//     (a, b) => b.tutor.rating - a.tutor.rating\n//   );\nsetTutors(tutors);}fetchData();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search Tutors\",onChange:async e=>{const searchQuery=e.target.value;setSearchedQuery(searchQuery);const queriedTutors=await tutorListBasedOnQuery(searchQuery);setQueriedTutors(queriedTutors);}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/tutorsearch\",{state:{searchQueryResult:queriedTutors,searchedQuery:searchedQuery,user:user}}),children:\"Go to Tutor Search\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Top Tutors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Tutor-List\",children:tutors.map((tutor,index)=>/*#__PURE__*/// Mock data for tutors. Change the values with appropriate tutor data.\n_jsx(TutorCard,{tutor:tutor,user:user},index))})]}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:\"\\n          .navbar {\\n            display: flex;\\n            gap: 10px;\\n            width: 100%;\\n            padding: 12px 20px;\\n            margin: 8px 0;\\n            box-sizing: border-box;\\n          }\\n          button {\\n            background-color: black;\\n            color: white;\\n            border: none;\\n            cursor: pointer;\\n            width: 60px;\\n          }\\n          .Tutor-List {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n            gap: 20px;\\n            padding: 20px;\\n          }\\n        \"})]});}export default StudentExplorePage;","map":{"version":3,"names":["React","TutorCard","useNavigate","getTutors","tutorListBasedOnQuery","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StudentExplorePage","props","tutors","setTutors","useState","queriedTutors","setQueriedTutors","searchedQuery","setSearchedQuery","navigate","user","useEffect","fetchData","children","className","type","placeholder","onChange","e","searchQuery","target","value","onClick","state","searchQueryResult","map","tutor","index"],"sources":["/workspaces/Tutor-Website/frontend/src/pages/studentpages/StudentExplorePage.jsx"],"sourcesContent":["import React from \"react\";\nimport TutorCard from \"../../components/TutorCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getTutors } from \"../../controllers/AccountController\";\nimport { tutorListBasedOnQuery } from \"../../controllers/AccountController\";\nfunction StudentExplorePage(props) {\n  const [tutors, setTutors] = React.useState([]);\n  const [queriedTutors, setQueriedTutors] = React.useState([]);\n  const [searchedQuery, setSearchedQuery] = React.useState([]);\n  const navigate = useNavigate();\n  const user = props.user;\n  React.useEffect(() => {\n    async function fetchData() {\n      const tutors = await getTutors();\n    //   const sortedTutors = tutors.sort(\n    //     (a, b) => b.tutor.rating - a.tutor.rating\n    //   );\n      setTutors(tutors);\n    }\n    fetchData();\n  }, []);\n  return (\n    <>\n      <div>\n        <div className=\"navbar\">\n          {/* using useNavigation is aparantly more syntactically correct  */}\n          <input\n            type=\"text\"\n            placeholder=\"Search Tutors\"\n            onChange={async (e) => {\n              const searchQuery = e.target.value;\n              setSearchedQuery(searchQuery);\n              const queriedTutors = await tutorListBasedOnQuery(searchQuery);\n              setQueriedTutors(queriedTutors);\n            }}\n          />\n          <button\n            onClick={() =>\n              navigate(\"/tutorsearch\", { state: { searchQueryResult: queriedTutors, searchedQuery: searchedQuery, user: user } })\n            }\n          >\n            Go to Tutor Search\n          </button>\n        </div>\n        <h1>Top Tutors</h1>\n        <div className=\"Tutor-List\">\n          {tutors.map((tutor, index) => (\n            // Mock data for tutors. Change the values with appropriate tutor data.\n            <TutorCard key={index} tutor={tutor} user={user} />\n          ))}\n        </div>\n      </div>\n\n      <style jsx>\n        {`\n          .navbar {\n            display: flex;\n            gap: 10px;\n            width: 100%;\n            padding: 12px 20px;\n            margin: 8px 0;\n            box-sizing: border-box;\n          }\n          button {\n            background-color: black;\n            color: white;\n            border: none;\n            cursor: pointer;\n            width: 60px;\n          }\n          .Tutor-List {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n            padding: 20px;\n          }\n        `}\n      </style>\n    </>\n  );\n}\n\nexport default StudentExplorePage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,4BAA4B,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,SAAS,KAAQ,qCAAqC,CAC/D,OAASC,qBAAqB,KAAQ,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAC5E,QAAS,CAAAC,kBAAkBA,CAACC,KAAK,CAAE,CACjC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAAK,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAmB,IAAI,CAAGT,KAAK,CAACS,IAAI,CACvBrB,KAAK,CAACsB,SAAS,CAAC,IAAM,CACpB,cAAe,CAAAC,SAASA,CAAA,CAAG,CACzB,KAAM,CAAAV,MAAM,CAAG,KAAM,CAAAV,SAAS,CAAC,CAAC,CAClC;AACA;AACA;AACEW,SAAS,CAACD,MAAM,CAAC,CACnB,CACAU,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CACN,mBACEf,KAAA,CAAAE,SAAA,EAAAc,QAAA,eACEhB,KAAA,QAAAgB,QAAA,eACEhB,KAAA,QAAKiB,SAAS,CAAC,QAAQ,CAAAD,QAAA,eAErBlB,IAAA,UACEoB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,eAAe,CAC3BC,QAAQ,CAAE,KAAO,CAAAC,CAAC,EAAK,CACrB,KAAM,CAAAC,WAAW,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAClCb,gBAAgB,CAACW,WAAW,CAAC,CAC7B,KAAM,CAAAd,aAAa,CAAG,KAAM,CAAAZ,qBAAqB,CAAC0B,WAAW,CAAC,CAC9Db,gBAAgB,CAACD,aAAa,CAAC,CACjC,CAAE,CACH,CAAC,cACFV,IAAA,WACE2B,OAAO,CAAEA,CAAA,GACPb,QAAQ,CAAC,cAAc,CAAE,CAAEc,KAAK,CAAE,CAAEC,iBAAiB,CAAEnB,aAAa,CAAEE,aAAa,CAAEA,aAAa,CAAEG,IAAI,CAAEA,IAAK,CAAE,CAAC,CACnH,CAAAG,QAAA,CACF,oBAED,CAAQ,CAAC,EACN,CAAC,cACNlB,IAAA,OAAAkB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBlB,IAAA,QAAKmB,SAAS,CAAC,YAAY,CAAAD,QAAA,CACxBX,MAAM,CAACuB,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBACvB;AACAhC,IAAA,CAACL,SAAS,EAAaoC,KAAK,CAAEA,KAAM,CAAChB,IAAI,CAAEA,IAAK,EAAhCiB,KAAkC,CACnD,CAAC,CACC,CAAC,EACH,CAAC,cAENhC,IAAA,UAAOD,GAAG,MAAAmB,QAAA,slBAwBH,CAAC,EACR,CAAC,CAEP,CAEA,cAAe,CAAAb,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}