{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import'../styles/UserDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Sidebar(_ref){let{onSelect,toggleDropdown,isDropdownOpen,courses,onCourseSelect,isTutor}=_ref;const handleMyCoursesClick=()=>{onSelect('myCourses');toggleDropdown();};return/*#__PURE__*/_jsxs(\"aside\",{className:\"sidePanel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profileImageContainer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"profile.jpg\",alt:\"Profile\",className:\"profileImage\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ButtonsContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ButtonsGroup\",children:[isTutor?/*#__PURE__*/_jsx(\"div\",{className:\"sideButton\",onClick:()=>onSelect('profile'),children:\"Profile\"}):/*#__PURE__*/_jsx(\"div\",{className:\"sideButton\",onClick:()=>onSelect('explore'),children:\"Explore\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sideButton\",onClick:()=>onSelect('notifications'),children:\"Notifications\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sideButton\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"sideButton\",onClick:handleMyCoursesClick,children:[\"My Courses \",isDropdownOpen?'▼':'▶']}),isDropdownOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdownMenu\",children:courses.map(course=>/*#__PURE__*/_jsx(\"div\",{className:\"dropdownItem\",onClick:()=>onCourseSelect(course),children:course.focus},course.id))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ButtonsGroup\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sideButton\",onClick:()=>onSelect('settings'),children:\"Settings\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"sideButton\",children:\"Logout\"})]})]})]});}export default Sidebar;","map":{"version":3,"names":["React","Link","jsx","_jsx","jsxs","_jsxs","Sidebar","_ref","onSelect","toggleDropdown","isDropdownOpen","courses","onCourseSelect","isTutor","handleMyCoursesClick","className","children","src","alt","onClick","map","course","focus","id","to"],"sources":["/workspaces/Tutor-Website/frontend/src/pages/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/UserDashboard.css';\n\nfunction Sidebar({ onSelect, toggleDropdown, isDropdownOpen, courses, onCourseSelect, isTutor }) {\n\n    const handleMyCoursesClick = () => {\n        onSelect('myCourses');  \n        toggleDropdown();  \n    };\n\n    return (\n        <aside className=\"sidePanel\">\n            <div className=\"profileImageContainer\">\n                <img src=\"profile.jpg\" alt=\"Profile\" className=\"profileImage\" />\n                {/* <div className=\"statusIndicator\"></div> */}\n            </div>\n            <div className=\"ButtonsContainer\">\n                <div className=\"ButtonsGroup\">\n                    {isTutor ? (\n                        <div className=\"sideButton\" onClick={() => onSelect('profile')}>Profile</div>\n                    ) : (\n                        <div className=\"sideButton\" onClick={() => onSelect('explore')}>Explore</div>\n                    )}\n                    <div className=\"sideButton\" onClick={() => onSelect('notifications')}>Notifications</div>\n                    <div className=\"sideButton\">\n                        <button className=\"sideButton\" onClick={handleMyCoursesClick}>\n                            My Courses {isDropdownOpen ? '▼' : '▶'} \n                        </button>\n                        {isDropdownOpen && (\n                            <div className=\"dropdownMenu\">\n                                {courses.map(course => (\n                                    <div key={course.id} className=\"dropdownItem\" onClick={() => onCourseSelect(course)}>\n                                        {course.focus}\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                \n                <div className=\"ButtonsGroup\">\n                    <div className=\"sideButton\" onClick={() => onSelect('settings')}>Settings</div>\n                    <Link to=\"/\" className=\"sideButton\">Logout</Link>\n                </div>\n            </div>\n        </aside>\n    );\n}\n\nexport default Sidebar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAiF,IAAhF,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,cAAc,CAAEC,OAAO,CAAEC,cAAc,CAAEC,OAAQ,CAAC,CAAAN,IAAA,CAE3F,KAAM,CAAAO,oBAAoB,CAAGA,CAAA,GAAM,CAC/BN,QAAQ,CAAC,WAAW,CAAC,CACrBC,cAAc,CAAC,CAAC,CACpB,CAAC,CAED,mBACIJ,KAAA,UAAOU,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBb,IAAA,QAAKY,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cAClCb,IAAA,QAAKc,GAAG,CAAC,aAAa,CAACC,GAAG,CAAC,SAAS,CAACH,SAAS,CAAC,cAAc,CAAE,CAAC,CAE/D,CAAC,cACNV,KAAA,QAAKU,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BX,KAAA,QAAKU,SAAS,CAAC,cAAc,CAAAC,QAAA,EACxBH,OAAO,cACJV,IAAA,QAAKY,SAAS,CAAC,YAAY,CAACI,OAAO,CAAEA,CAAA,GAAMX,QAAQ,CAAC,SAAS,CAAE,CAAAQ,QAAA,CAAC,SAAO,CAAK,CAAC,cAE7Eb,IAAA,QAAKY,SAAS,CAAC,YAAY,CAACI,OAAO,CAAEA,CAAA,GAAMX,QAAQ,CAAC,SAAS,CAAE,CAAAQ,QAAA,CAAC,SAAO,CAAK,CAC/E,cACDb,IAAA,QAAKY,SAAS,CAAC,YAAY,CAACI,OAAO,CAAEA,CAAA,GAAMX,QAAQ,CAAC,eAAe,CAAE,CAAAQ,QAAA,CAAC,eAAa,CAAK,CAAC,cACzFX,KAAA,QAAKU,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBX,KAAA,WAAQU,SAAS,CAAC,YAAY,CAACI,OAAO,CAAEL,oBAAqB,CAAAE,QAAA,EAAC,aAC/C,CAACN,cAAc,CAAG,GAAG,CAAG,GAAG,EAClC,CAAC,CACRA,cAAc,eACXP,IAAA,QAAKY,SAAS,CAAC,cAAc,CAAAC,QAAA,CACxBL,OAAO,CAACS,GAAG,CAACC,MAAM,eACflB,IAAA,QAAqBY,SAAS,CAAC,cAAc,CAACI,OAAO,CAAEA,CAAA,GAAMP,cAAc,CAACS,MAAM,CAAE,CAAAL,QAAA,CAC/EK,MAAM,CAACC,KAAK,EADPD,MAAM,CAACE,EAEZ,CACR,CAAC,CACD,CACR,EACA,CAAC,EACL,CAAC,cAENlB,KAAA,QAAKU,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBb,IAAA,QAAKY,SAAS,CAAC,YAAY,CAACI,OAAO,CAAEA,CAAA,GAAMX,QAAQ,CAAC,UAAU,CAAE,CAAAQ,QAAA,CAAC,UAAQ,CAAK,CAAC,cAC/Eb,IAAA,CAACF,IAAI,EAACuB,EAAE,CAAC,GAAG,CAACT,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,QAAM,CAAM,CAAC,EAChD,CAAC,EACL,CAAC,EACH,CAAC,CAEhB,CAEA,cAAe,CAAAV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}